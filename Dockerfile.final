# Multi-stage build for BassNotion monorepo
FROM node:20-alpine AS builder
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/package.json
COPY libs/contracts/package.json ./libs/contracts/package.json

# Install pnpm and dependencies
RUN npm install -g pnpm
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Disable Nx Cloud and daemon to avoid authentication issues
ENV NX_CLOUD_NO_TIMEOUTS=true
ENV NX_CLOUD_AUTH=false
ENV NX_DAEMON=false

# Build contracts library first
RUN pnpm nx build @bassnotion/contracts

# Make sure contracts are freshly built with correct structure
RUN cd libs/contracts && rm -rf dist tsconfig.tsbuildinfo && npm run build

# Make contracts available for backend build by copying to both locations
RUN mkdir -p node_modules/@bassnotion/contracts && \
    cp -r libs/contracts/dist node_modules/@bassnotion/contracts/ && \
    cp libs/contracts/package.json node_modules/@bassnotion/contracts/ && \
    cp libs/contracts/tsconfig.json node_modules/@bassnotion/contracts/

# Also ensure it's available in the backend's node_modules
RUN mkdir -p apps/backend/node_modules/@bassnotion/contracts && \
    cp -r libs/contracts/dist apps/backend/node_modules/@bassnotion/contracts/ && \
    cp libs/contracts/package.json apps/backend/node_modules/@bassnotion/contracts/ && \
    cp libs/contracts/tsconfig.json apps/backend/node_modules/@bassnotion/contracts/

# Debug: Verify the structure
RUN echo "=== Root node_modules contracts ===" && \
    ls -la node_modules/@bassnotion/contracts/ && \
    echo "=== Backend node_modules contracts ===" && \
    ls -la apps/backend/node_modules/@bassnotion/contracts/ && \
    echo "=== Testing module resolution ===" && \
    cd apps/backend && node -e "console.log('Contracts resolved to:', require.resolve('@bassnotion/contracts'))"

# Build backend
RUN pnpm nx build @bassnotion/backend --prod

# Production stage
FROM node:20-alpine AS production
WORKDIR /app

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

EXPOSE 3000
CMD ["node", "dist/apps/backend/main.js"] 