# Single-stage build for BassNotion monorepo - ensures all dependencies are available
FROM node:20-alpine

WORKDIR /app

# Copy package files for dependency installation
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/
COPY libs/contracts/package.json ./libs/contracts/

# Install pnpm
RUN npm install -g pnpm

# Install ALL dependencies in workspace context
RUN pnpm install --frozen-lockfile

# CRITICAL FIX: Manually create symlinks for @nestjs packages since pnpm isn't doing it
RUN echo "=== Creating @nestjs symlinks manually ===" && \
    mkdir -p node_modules/@nestjs && \
    ln -sf ../node_modules/.pnpm/node_modules/@nestjs/common node_modules/@nestjs/common && \
    ln -sf ../node_modules/.pnpm/node_modules/@nestjs/core node_modules/@nestjs/core && \
    ln -sf ../node_modules/.pnpm/node_modules/@nestjs/config node_modules/@nestjs/config && \
    ln -sf ../node_modules/.pnpm/node_modules/@nestjs/cqrs node_modules/@nestjs/cqrs && \
    ln -sf ../node_modules/.pnpm/node_modules/@nestjs/platform-fastify node_modules/@nestjs/platform-fastify && \
    echo "=== Verifying symlinks ===" && \
    ls -la node_modules/@nestjs/ && \
    echo "=== Testing @nestjs/core import ===" && \
    node -e "console.log('Testing import...'); import('@nestjs/core').then(() => console.log('SUCCESS')).catch(e => console.log('ERROR:', e.message))"

# Copy source code
COPY . .

# Create necessary directories for Nx
RUN mkdir -p /app/tmp /app/.nx/cache

# Set Nx environment variables
ENV NX_DAEMON=false
ENV NX_CACHE_DIRECTORY=/app/.nx/cache
ENV NX_CLOUD_ACCESS_TOKEN=""

# Build contracts and backend
RUN npx nx build contracts --configuration=production
RUN npx nx build backend --configuration=production

# Final verification - this should work now!
RUN echo "=== FINAL CHECK - @nestjs should be available ===" && \
    ls -la node_modules/@nestjs/ && \
    echo "=== SUCCESS: NestJS packages are now available! ===" 

# Environment variables
ENV NODE_ENV=production

# Expose port
EXPOSE 3000

# Start the application with debugging
CMD ["sh", "-c", "echo 'Starting NestJS app...' && echo 'PORT=$PORT' && echo 'NODE_ENV=$NODE_ENV' && node dist/apps/backend/src/main.js"] 